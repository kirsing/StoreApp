server:
  port: 8090

spring:
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:3307/orderdb
    username: root
    password: root
    driverClassName: com.mysql.cj.jdbc.Driver
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
  application:
    name: ORDERSERVICE
  config:
    import: optional:configserver:http://localhost:8071/

  cloud:
#    openfeign:
#      circuitbreaker:
#        enabled: true
    function:
      definition: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication
    kubernetes:
      discovery:
        all-namespaces: true
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    connection-timeout: 10s

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-74127808.okta.com/oauth2/default
      client:
        registration:
          internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oagkty5nuUAPuvbZ5d7
            client-secret: YU4A_jaijcmtbrF0x4jxb22gphZi8W3Ldew1gcQsojt_2oIMoUNKK0EjNvHCAs3z
        provider:
          okta:
            issuer-uri: https://dev-74127808.okta.com/oauth2/default
okta:
  oauth2:
    issuer: https://dev-74127808.okta.com/oauth2/default
    audience: api://default
#eureka:
#  client:
#    service-url:
#      defaultZone: http://localhost:8070/eureka/
#    fetch-registry: true
#    register-with-eureka: true
#  instance:
#    prefer-ip-address: true                FOR V3!!

management:
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true

  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

info:
  app:
    name: orders
  description:
    Order Application
  version: 1.0.0

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

#resilience4j.circuitbreaker:
#  configs:
#    default:
#      slidingWindowSize: 10
#      permittedNumberOfCallsInHalfOpenState: 2
#      slow-call-duration-threshold:
#        seconds: 10
#      failureRateThreshold: 50
#      waitDurationInOpenState: 10000


resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1

