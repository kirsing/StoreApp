spring:
  application:
    name: cloudgateway
  config:
    import: optional:configserver:http://localhost:8071/

  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false

#      routes:
#        - id : ORDERSERVICE
#          uri: lb://ORDERSERVICE
#          predicates:
#            - Path=/order/**
#          filters:
##            - name: CircuitBreaker
##              args:
##                name: CircuitBreaker
##                fallBackUri: forward:/orderServiceFallBack
#
##            - name: Retry
##              args:
##                retries: 3
##                methods: GET
##                backoff:
##                  firstBackoff: 100ms
##                  maxBackoff: 1000ms
##                  factor: 2
##                  basedOnPreviousValue: true
#            - name: RequestRateLimiter
#
#        - id: PAYMENTSERVICE
#          uri: lb://PAYMENTSERVICE
#          predicates:
#            - Path=/payment/**
#          filters:
##            - name: CircuitBreaker
##              args:
##                name: CircuitBreaker
##                fallBackUri: forward:/paymentServiceFallBack
##            - name: Retry
##              args:
##                retries: 3
##                methods: POST,GET
##                backoff:
##                  firstBackoff: 100ms
##                  maxBackoff: 1000ms
##                  factor: 2
##                  basedOnPreviousValue: true
#            - name: RequestRateLimiter
#
#        - id: PRODUCTSERVICE
#          uri: lb://PRODUCTSERVICE
#          predicates:
#            - Path=/product/**
#          filters:
##            - name: CircuitBreaker
##              args:
##                name: CircuitBreaker
##                fallBackUri: forward:/productServiceFallBack
#            - name: RequestRateLimiter
#      httpclient:
#        connect-timeout: 1000
#        response-timeout: 5s
okta:
  oauth2:
    issuer: https://dev-74127808.okta.com/oauth2/default
    audience: api://default
    client-id: 0oagkty5nuUAPuvbZ5d7
    client-secret: YU4A_jaijcmtbrF0x4jxb22gphZi8W3Ldew1gcQsojt_2oIMoUNKK0EjNvHCAs3z
    scopes: openid, profile, email, offline_access

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    gateway:
      enabled: true
  info:
    env:
      enabled: true
    health:
      probes:
        enabled: true
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}


info:
  app:
    name: cloudgateway
  description:
    Cloud Gateway Application
  version: 1.0.0

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

#resilience4j.circuitbreaker:
#  configs:
#    default:
#      slidingWindowSize: 10 #сообщаем шаблону CB, сколько у него запросов.
#      permittedNumberOfCallsInHalfOpenState: 2
#      failureRateThreshold: 50
#      slow-call-duration-threshold:
#        seconds: 10
#      waitDurationInOpenState: 10000
      #Итак, с этой конфигурацией, моим шаблоном автоматического выключателя, он будет ждать 10 секунд при каждой попытке
   #чтобы перейти в полуоткрытое состояние и разрешить частичный трафик.

